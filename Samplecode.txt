import React, { useState } from 'react';
import '../css-files/CareerServices.css'; 
// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
// import { faMapMarker, faFileAlt, faBriefcase } from '@fortawesome/free-solid-svg-icons';
import MySong from '../MySong';


function CareerServices({ img, theme, toggleMode }) {

  const [formData, setFormData] = useState({
        name: '',
        email: '',
        applicationType: '',
        selectedField: '',
        experience: '',
        resume: null,
        certificate: null,
      });
    
      const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({
          ...prevData,
          [name]: value,
        }));
      };
    
      const handleFileChange = (e) => {
        const file = e.target.files[0];
        setFormData((prevData) => ({
          ...prevData,
          resume: file,
        }));
      };
    
      const handleSubmit = (e) => {
        e.preventDefault();
        // Perform your form submission logic here
        console.log('Form submitted:', formData);
        // Reset the form after submission
        setFormData({
          name: '',
          email: '',
          applicationType: '',
          selectedField: '',
          experience: '',
          resume: '',
          certificate: '',
        });
      };

  function addClass() {
    document.body.classList.add("sent");
  }
  
  return (
    <>


<div className='btn-outer'>
        <div className='btn-inner'>
                     <div className='both-botton'>
             <img src={img} alt='sun&moon' onClick={toggleMode} />
            <MySong theme={theme} />


           </div>
         </div>
       </div>
       <h1 style={{ color: theme === 'light' ? 'rgb(242, 75, 116) ' : "rgb(30, 124, 192)" }}>Career Services</h1>


       <div className="career-services-container">
<div class="wrapper centered">
  <article class="letter">
  <form onSubmit={handleSubmit}>
    <div class="side">
<p>
    <label htmlFor="name">Full Name:</label>
            <input
              type="text"
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
            />
            </p>
            <p>
            <label htmlFor="email">Email:</label>
            <input
              type="email"
              id="email"
              name="email"
              value={formData.email}
              onChange={handleChange}
              required
            />
            </p>
            <p>
            <label htmlFor="applicationType">Application Type:</label>
            <select
              id="applicationType"
              name="applicationType"
              value={formData.applicationType}
              onChange={handleChange}
              required
            >
              <option value="" disabled>
                Select Application Type
              </option>
              <option value="internship">Applying for Internship</option>
              <option value="job">Applying for Job</option>
            </select>
            </p>
          </div>
       
         
          
         
    
    <div class="side">
    <div className="form-group">
            <label htmlFor="applicationType">Application Type:</label>
             <select
              id="applicationType"
              name="applicationType"
              value={formData.applicationType}
              onChange={handleChange}
              required
            >
              <option value="" disabled>
                Select Application Type
              </option>
              <option value="internship">Applying for Internship</option>
              <option value="job">Applying for Job</option>
            </select>
          </div>
          </div>
          <div class="side">
          {formData.applicationType && (
            <div className="form-group">
              <label htmlFor="selectedField">Select Field:</label>
              <select
                id="selectedField"
                name="selectedField"
                value={formData.selectedField}
                onChange={handleChange}
                required
              >
                <option value="" disabled>
                  Select Field
                </option>
                <option value="web">Web Development</option>
                <option value="dataScience">Data Science</option>
                <option value="backend">Backend Development</option>
                <option value="uiDesigning">UI Designing</option>
                {/* Add more options as needed */}
              </select>
            </div>
          )}
          {formData.applicationType === 'job' && (
            <div className="form-group">
              <label htmlFor="experience">Years of Experience:</label>
              <input
                type="text"
                id="experience"
                name="experience"
                value={formData.experience}
                onChange={handleChange}
                placeholder="E.g., 2 years"
                required
              />
              <label htmlFor="certificate">Upload Certificate:</label>
              <input
                type="file"
                id="certificate"
                name="certificate"
                onChange={(e) => handleFileChange(e, 'certificate')}
                accept=".pdf, .doc, .docx"
                required
              />
            </div>
          )}
          <div className="form-group">
            <label htmlFor="resume">Upload Resume:</label>
            <input
              type="file"
              id="resume"
              name="resume"
              onChange={handleFileChange}
              accept=".pdf, .doc, .docx"
              required
            />
          </div>
          </div>
        
        <button id="sendLetter" onClick={addClass}>Send</button>
      
  
    </form>
  </article>
  <div class="envelope front"></div>
  <div class="envelope back"></div>
</div>
</div>
<p class="result-message centered">Thank you for your message</p>
    </>
  )
}

export default CareerServices;





**************************************














  /* Add more styles as needed */
  @import url(https://fonts.googleapis.com/css?family=Dancing+Script:400,700);
 
 
  small {
    display: block;
    padding: 1rem 0;
    font-size: 0.8rem;
    transition: opacity 0.33s;
  }
  /* textarea, input, button {
    line-height: 1.5rem;
    border: 0;
    outline: none;
    font-family: inherit;
    appearance: none;
  }
  textarea, input {
    color: #4e5e72;
    background-color: transparent;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10' height='24'><rect fill='rgb(229, 225, 187)' x='0' y='23' width='10' height='1'/></svg>");
  }
  textarea {
   width: 100%;
   height: 8rem;
   resize: none;
  }
  input {
   width: 50%;
   margin-bottom: 1rem;
    &[type=text]:invalid, [type=email]:invalid {
      box-shadow: none;
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10' height='24'><rect fill='rgba(240, 132, 114, 0.5)' x='0' y='23' width='10' height='1'/></svg>");
    }
  }
 
  input[type=text]:focus,
  input[type=email]:focus,
  textarea:focus {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='10' height='24'><rect fill='rgba(78, 94, 114, 0.3)' x='0' y='23' width='10' height='1'/></svg>");
    outline: none;
  }
  */
  .letter {
   
    width: 30rem;
    margin: auto;
    perspective: 60rem;
  }
  .side {
    height: 12rem;
    background-color: #fcfcf8;
    outline: 1px solid transparent;
    &:nth-of-type(1) {
      padding: 2rem 2rem 0;
      border-radius: 1rem 1rem 0 0;
      box-shadow: inset 0 0.75rem 2rem rgba(229, 225, 187, 0.5);
    }
    &.side:nth-of-type(2) {
      padding: 2rem;
      border-radius: 0 0 1rem 1rem;
      box-shadow: 0 0.3rem 0.3rem rgba(0, 0, 0, 0.05), inset 0 -0.57rem 2rem rgba(229, 225, 187, 0.5);
      text-align: right;
    }
  }
  .envelope {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    margin: auto;
  }
  .envelope.front {
    width: 10rem;
    height: 6rem;
    border-radius: 0 0 1rem 1rem;
    overflow: hidden;
    z-index: 9999;
    opacity: 0;
  }
  .envelope.front::before, .envelope.front::after {
    position: absolute;
    display: block;
    width: 12rem;
    height: 6rem;
    background-color: #e9dc9d;
    transform: rotate(30deg);
    transform-origin: 0 0;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
    content: '';
  }
  .envelope.front::after{
    right: 0;
    transform: rotate(-30deg);
    transform-origin: 100% 0;
  }
  .envelope.back {
    top: -4rem;
    width: 10rem;
    height: 10rem;
    overflow: hidden;
    z-index: -9998;
    opacity: 0;
    transform: translateY(-6rem);
    &::before {
      display: block;
      width: 10rem;
      height: 10rem;
      background-color: #e9dc9d;
      border-radius: 1rem;
      content: '';
      transform: scaleY(0.6) rotate(45deg)
    }
  }
  .result-message {
    opacity: 0;
    transition: all 0.3s 2s;
    transform: translateY(9rem);
    z-index: -9999;
  }
  .sent {
    & .letter {
      animation: scaleLetter 1s forwards ease-in /*,
                 pushLetter 0.5s 1.33s forwards ease-out*/ ;
    }
    & .side:nth-of-type(1) {
      transform-origin: 0 100%;
      animation: closeLetter 0.66s forwards ease-in;
    }
    & .side:nth-of-type(1) h1, .side:nth-of-type(1) textarea {
      animation: fadeOutText 0.66s forwards linear;
    }
    & button {
      background-color: rgba(78, 94, 114, 0.2);
    }
    & .envelope {
      animation: fadeInEnvelope 0.5s 1.33s forwards ease-out;
    }
    & .result-message {
      opacity: 1;
      transform: translateY(12rem);
    }
    & small {
      opacity: 0;
    }
  }
 
  
  @keyframes closeLetter {
     50% {transform: rotateX(-90deg);}
     100% {transform: rotateX(-180deg);}
  }
  @keyframes fadeOutText {
     49% {opacity: 1;}
     50% {opacity: 0;}
     100% {opacity: 0;}
  }
  @keyframes fadeInEnvelope {
    0% {opacity: 0; transform: translateY(8rem);}
    /*90% {opacity: 1; transform: translateY(4rem);}*/
    100% {opacity: 1; transform: translateY(4.5rem);}
  }
  @keyframes scaleLetter {
    66% {transform: translateY(-8rem) scale(0.5, 0.5);}
    75% {transform: translateY(-8rem) scale(0.5, 0.5);}
    90% {transform: translateY(-8rem) scale(0.3, 0.5);}
    97% {transform: translateY(-8rem) scale(0.33, 0.5);}
    100%{transform: translateY(-8rem) scale(0.3, 0.5);}
  }
  
  /*
  @keyframes pushLetter {
    0% {transform: translateY(-8rem) scale(0.3, 0.5);}
    50% {transform: translateY(-8rem) scale(0.3, 0.5);}
    90% {transform: translateY(-8.5rem) scale(0.3, 0.5);}
    100% {transform: translateY(-8rem) scale(0.3, 0.5);}
  }
  */




